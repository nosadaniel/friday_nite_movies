// Mocks generated by Mockito 5.4.4 from annotations
// in friday_nite_movies/test/tmdb_object_unit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:dio/dio.dart' as _i2;
import 'package:friday_nite_movies/src/features/movies/data/movies_repository.dart'
    as _i5;
import 'package:friday_nite_movies/src/features/movies/domain/tmdb_movie.dart'
    as _i3;
import 'package:friday_nite_movies/src/features/movies/domain/tmdb_movies_response.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDio_0 extends _i1.SmartFake implements _i2.Dio {
  _FakeDio_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTMDBMovie_1 extends _i1.SmartFake implements _i3.TMDBMovie {
  _FakeTMDBMovie_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTMDBMoviesResponse_2 extends _i1.SmartFake
    implements _i4.TMDBMoviesResponse {
  _FakeTMDBMoviesResponse_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MoviesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMoviesRepository extends _i1.Mock implements _i5.MoviesRepository {
  @override
  _i2.Dio get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeDio_0(
          this,
          Invocation.getter(#client),
        ),
        returnValueForMissingStub: _FakeDio_0(
          this,
          Invocation.getter(#client),
        ),
      ) as _i2.Dio);

  @override
  String get apiKey => (super.noSuchMethod(
        Invocation.getter(#apiKey),
        returnValue: _i6.dummyValue<String>(
          this,
          Invocation.getter(#apiKey),
        ),
        returnValueForMissingStub: _i6.dummyValue<String>(
          this,
          Invocation.getter(#apiKey),
        ),
      ) as String);

  @override
  _i7.Future<_i3.TMDBMovie> movie({
    required int? movieId,
    _i2.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #movie,
          [],
          {
            #movieId: movieId,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i7.Future<_i3.TMDBMovie>.value(_FakeTMDBMovie_1(
          this,
          Invocation.method(
            #movie,
            [],
            {
              #movieId: movieId,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.TMDBMovie>.value(_FakeTMDBMovie_1(
          this,
          Invocation.method(
            #movie,
            [],
            {
              #movieId: movieId,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i7.Future<_i3.TMDBMovie>);

  @override
  _i7.Future<_i4.TMDBMoviesResponse> nowPlayingMovies({
    required int? page,
    _i2.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #nowPlayingMovies,
          [],
          {
            #page: page,
            #cancelToken: cancelToken,
          },
        ),
        returnValue:
            _i7.Future<_i4.TMDBMoviesResponse>.value(_FakeTMDBMoviesResponse_2(
          this,
          Invocation.method(
            #nowPlayingMovies,
            [],
            {
              #page: page,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.TMDBMoviesResponse>.value(_FakeTMDBMoviesResponse_2(
          this,
          Invocation.method(
            #nowPlayingMovies,
            [],
            {
              #page: page,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i7.Future<_i4.TMDBMoviesResponse>);

  @override
  _i7.Future<_i4.TMDBMoviesResponse> searchMovies({
    required ({int page, String query})? queryData,
    _i2.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchMovies,
          [],
          {
            #queryData: queryData,
            #cancelToken: cancelToken,
          },
        ),
        returnValue:
            _i7.Future<_i4.TMDBMoviesResponse>.value(_FakeTMDBMoviesResponse_2(
          this,
          Invocation.method(
            #searchMovies,
            [],
            {
              #queryData: queryData,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.TMDBMoviesResponse>.value(_FakeTMDBMoviesResponse_2(
          this,
          Invocation.method(
            #searchMovies,
            [],
            {
              #queryData: queryData,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i7.Future<_i4.TMDBMoviesResponse>);
}
